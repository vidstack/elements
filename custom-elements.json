{
  "schemaVersion": "0.1.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "./src/bundle/elements.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/bundle/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "../core"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "../providers/file"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "../providers/video"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/Player.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "Player",
          "cssProperties": [
            {
              "name": "--vds-player-font-family",
              "description": "A custom font family to be used throughout the player."
            },
            {
              "name": "--vds-player-bg",
              "description": "The background color of the player."
            },
            {
              "name": "--vds-blocker-z-index",
              "description": "The provider UI blocker position in the root z-axis stack inside the player."
            }
          ],
          "cssParts": [
            {
              "name": "player",
              "description": "The root player container."
            }
          ],
          "slots": [
            {
              "name": "",
              "description": "Used to pass in Provider/UI components."
            }
          ],
          "tagName": "vds-player",
          "events": [
            {
              "type": {
                "text": "ErrorEvent"
              }
            },
            {
              "name": "vds-play",
              "type": {
                "text": "PlayEvent"
              },
              "description": "Emitted when playback attempts to start."
            },
            {
              "name": "vds-pause",
              "type": {
                "text": "PauseEvent"
              },
              "description": "Emitted when playback pauses."
            },
            {
              "name": "vds-playing",
              "type": {
                "text": "PlayingEvent"
              },
              "description": "Emitted when playback being playback."
            },
            {
              "name": "vds-src-change",
              "type": {
                "text": "SrcChangeEvent"
              },
              "description": "Emitted when the current src changes."
            },
            {
              "name": "vds-poster-change",
              "type": {
                "text": "PosterChangeEvent"
              },
              "description": "Emitted when the current poster changes."
            },
            {
              "name": "vds-muted-change",
              "type": {
                "text": "MutedChangeEvent"
              },
              "description": "Emitted when the muted state of the current provider changes."
            },
            {
              "name": "vds-volume-change",
              "type": {
                "text": "VolumeChangeEvent"
              },
              "description": "Emitted when the volume state of the current provider changes."
            },
            {
              "name": "vds-time-change",
              "type": {
                "text": "TimeChangeEvent"
              },
              "description": "Emitted when the current playback time changes."
            },
            {
              "name": "vds-duration-change",
              "type": {
                "text": "DurationChangeEvent"
              },
              "description": "Emitted when the length of the media changes."
            },
            {
              "name": "vds-buffered-change",
              "type": {
                "text": "BufferedChangeEvent"
              },
              "description": "Emitted when the length of the media downloaded changes."
            },
            {
              "name": "vds-buffering-change",
              "type": {
                "text": "BufferingChangeEvent"
              },
              "description": "Emitted when playback resumes/stops due to lack of data."
            },
            {
              "name": "vds-view-type-change",
              "type": {
                "text": "ViewTypeChangeEvent"
              },
              "description": "Emitted when the view type of the current provider/media changes."
            },
            {
              "name": "vds-media-type-change",
              "type": {
                "text": "MediaTypeChangeEvent"
              },
              "description": "Emitted when the media type of the current provider/media changes."
            },
            {
              "name": "vds-playback-ready",
              "type": {
                "text": "PlaybackReadyEvent"
              },
              "description": "Emitted when playback is ready to start - analgous with `canPlayThrough`."
            },
            {
              "name": "vds-playback-start",
              "type": {
                "text": "PlaybackStartEvent"
              },
              "description": "Emitted when playback has started (`currentTime > 0`)."
            },
            {
              "name": "vds-playback-end",
              "type": {
                "text": "PlaybackEndEvent"
              },
              "description": "Emitted when playback ends (`currentTime === duration`)."
            },
            {
              "name": "vds-device-change",
              "type": {
                "text": "DeviceChangeEvent"
              },
              "description": "Emitted when the type of user device changes between mobile/desktop."
            },
            {
              "name": "vds-aspect-ratio-change",
              "type": {
                "text": "AspectRatioChangeEvent"
              },
              "description": "Emitted when the aspect ratio changes."
            },
            {
              "name": "vds-error",
              "type": {
                "text": "ErrorEvent"
              },
              "description": "Emitted when a provider encounters an error during media loading/playback."
            }
          ],
          "mixins": [
            {
              "name": "PlayerMixin",
              "module": "/src/core/PlayerMixin"
            }
          ],
          "superclass": {
            "name": "PlayerMethods",
            "module": "/src/core/player.types"
          },
          "members": [
            {
              "kind": "field",
              "name": "disposal",
              "privacy": "protected",
              "default": "new Disposal()"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "buildAriaBusy",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "'true' | 'false'"
                }
              }
            },
            {
              "kind": "method",
              "name": "buildClassMap",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Record<string, boolean>"
                }
              }
            },
            {
              "kind": "field",
              "name": "_currentProvider",
              "privacy": "protected",
              "type": {
                "text": "MediaProvider"
              }
            },
            {
              "kind": "field",
              "name": "currentProvider",
              "privacy": "public",
              "type": {
                "text": "MediaProvider | undefined"
              }
            },
            {
              "kind": "field",
              "name": "internalPlayer",
              "privacy": "public",
              "type": {
                "text": "unknown"
              }
            },
            {
              "kind": "method",
              "name": "throwIfNoMediaProvider",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "play",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "pause",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "canPlayType",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "requestQueue",
              "privacy": "protected",
              "default": "new Map<string, () => void | Promise<void>>()"
            },
            {
              "kind": "field",
              "name": "pendingRequestQueueFlush",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "getRequestQueue",
              "privacy": "public",
              "description": "Returns a clone of the current request queue for testing and/or debugging purposes.",
              "return": {
                "type": {
                  "text": "Map<string, () => void | Promise<void>>"
                }
              }
            },
            {
              "kind": "method",
              "name": "waitForRequestQueueToFlush",
              "privacy": "public",
              "description": "Waits for the current request queue to be flushed.",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "safelyMakeRequest",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "requestKey",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "attemptRequestOrQueue",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "requestKey",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "request",
                  "type": {
                    "text": "() => void | Promise<void>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "flushRequestQueue",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "requestPlay",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "requestPause",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "requestControls",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "isControlsVisible",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "requestVolumeChange",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "volume",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "requestTimeChange",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "time",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "requestMutedChange",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "muted",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "allowUserEventsToBubble",
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "method",
              "name": "userEventGateway",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "listenToUserEvents",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "catchAllUserEvents",
              "privacy": "protected",
              "description": "This handler is attached in the \"Connect\" section above. Use it for processing all user\nevents.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "VdsCustomEvent<unknown>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleUserPlayRequest",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleUserPauseRequest",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleUserMutedChangeRequest",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "UserMutedChangeRequestEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleUserVolumeChangeRequest",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "UserVolumeChangeRequestEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleUserTimeChangeRequest",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "UserTimeChangeRequestEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "allowProviderEventsToBubble",
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "method",
              "name": "providerEventGateway",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "listenToProviderEvents",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "catchAllProviderEvents",
              "privacy": "protected",
              "description": "This handler is attached in the \"Connect\" section above. Use it for processing all provider\nevents.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "VdsCustomEvent<unknown, VdsProviderEventType>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "translateProviderEventAndDispatch",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "VdsCustomEvent<unknown, VdsProviderEventType>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleProviderConnect",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "ProviderConnectEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleProviderPlaybackReady",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleProviderDisconnect",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleProviderError",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "volume",
              "privacy": "public",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "currentTime",
              "privacy": "public",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "paused",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "controls",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "muted",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "currentSrc",
              "privacy": "public",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "currentPoster",
              "privacy": "public",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "duration",
              "privacy": "public",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "buffered",
              "privacy": "public",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "isBuffering",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "isPlaying",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "hasPlaybackStarted",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "hasPlaybackEnded",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "isPlaybackReady",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Player",
          "declaration": {
            "name": "Player",
            "module": "./src/core/Player.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/PlayerMixin.ts",
      "declarations": [
        {
          "kind": "mixin",
          "name": "PlayerMixin",
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": ""
              },
              "description": "- the constructor to mix into."
            }
          ],
          "mixins": [
            {
              "name": "PlayerContextMixin",
              "module": "/src/core/mixins"
            },
            {
              "name": "DeviceObserverMixin",
              "module": "/src/core/device"
            },
            {
              "name": "AspectRatioMixin",
              "module": "/src/core/mixins"
            },
            {
              "name": "ViewTypeMixin",
              "module": "/src/core/mixins"
            },
            {
              "name": "MediaTypeMixin",
              "module": "/src/core/mixins"
            },
            {
              "name": "UuidMixin",
              "module": "/src/core/uuid"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PlayerMixin",
          "declaration": {
            "name": "PlayerMixin",
            "module": "./src/core/PlayerMixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/env.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "isTestEnv",
          "description": "Whether we are currently inside a test environment.",
          "return": {
            "type": {
              "text": "boolean"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isTestEnv",
          "declaration": {
            "name": "isTestEnv",
            "module": "./src/core/env.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "../shared/constants"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./provider"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./user"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./player.types"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./player.events"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./player.context"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./player.storybook"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Player"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./PlayerMixin"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./device"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./mixins"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/player.context.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "playerContext",
          "description": "The player context object contains a collection of contexts that map 1:1 with player\nstate. This context enables state to be passed down to elements lower in the player\nsubtree. It's updated by the player when it receives updates from the current provider\nvia events. If you're creating your own elements to place inside the player element you can use\nit like so...\n\n```ts\nimport { internalProperty, LitElement } from \"lit-element\";\nimport { playerContext } from \"@vidstack/player/core\";\n\nclass MyElement extends LitElement {\n\\@internalProperty()\n\\@playerContext.paused.consume()\npaused = playerContext.paused.defaultValue;\n}\n```",
          "type": {
            "text": "PlayerContext"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "playerContext",
          "declaration": {
            "name": "playerContext",
            "module": "./src/core/player.context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/player.css.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "playerStyles"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "playerStyles",
          "declaration": {
            "name": "playerStyles",
            "module": "./src/core/player.css.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/player.events.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "buildsVdsPlayerEvent",
          "return": {
            "type": {
              "text": "PlayerEventConstructor<T>"
            }
          },
          "parameters": [
            {
              "name": "type",
              "type": {
                "text": "T"
              }
            }
          ]
        },
        {
          "kind": "class",
          "name": "PlayEvent",
          "mixins": [
            {
              "name": "buildsVdsPlayerEvent",
              "module": "./src/core/player.events.ts"
            }
          ],
          "superclass": {
            "name": "play",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "PauseEvent",
          "mixins": [
            {
              "name": "buildsVdsPlayerEvent",
              "module": "./src/core/player.events.ts"
            }
          ],
          "superclass": {
            "name": "pause",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "PlayingEvent",
          "mixins": [
            {
              "name": "buildsVdsPlayerEvent",
              "module": "./src/core/player.events.ts"
            }
          ],
          "superclass": {
            "name": "playing",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "CurrentSrcChangeEvent",
          "mixins": [
            {
              "name": "buildsVdsPlayerEvent",
              "module": "./src/core/player.events.ts"
            }
          ],
          "superclass": {
            "name": "src-change",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "PosterChangeEvent",
          "mixins": [
            {
              "name": "buildsVdsPlayerEvent",
              "module": "./src/core/player.events.ts"
            }
          ],
          "superclass": {
            "name": "poster-change",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "MutedChangeEvent",
          "mixins": [
            {
              "name": "buildsVdsPlayerEvent",
              "module": "./src/core/player.events.ts"
            }
          ],
          "superclass": {
            "name": "muted-change",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "VolumeChangeEvent",
          "mixins": [
            {
              "name": "buildsVdsPlayerEvent",
              "module": "./src/core/player.events.ts"
            }
          ],
          "superclass": {
            "name": "volume-change",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "TimeChangeEvent",
          "mixins": [
            {
              "name": "buildsVdsPlayerEvent",
              "module": "./src/core/player.events.ts"
            }
          ],
          "superclass": {
            "name": "time-change",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "DurationChangeEvent",
          "mixins": [
            {
              "name": "buildsVdsPlayerEvent",
              "module": "./src/core/player.events.ts"
            }
          ],
          "superclass": {
            "name": "duration-change",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "BufferedChangeEvent",
          "mixins": [
            {
              "name": "buildsVdsPlayerEvent",
              "module": "./src/core/player.events.ts"
            }
          ],
          "superclass": {
            "name": "buffered-change",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "BufferingChangeEvent",
          "mixins": [
            {
              "name": "buildsVdsPlayerEvent",
              "module": "./src/core/player.events.ts"
            }
          ],
          "superclass": {
            "name": "buffered-change",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "ViewTypeChangeEvent",
          "mixins": [
            {
              "name": "buildsVdsPlayerEvent",
              "module": "./src/core/player.events.ts"
            }
          ],
          "superclass": {
            "name": "view-type-change",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "MediaTypeChangeEvent",
          "mixins": [
            {
              "name": "buildsVdsPlayerEvent",
              "module": "./src/core/player.events.ts"
            }
          ],
          "superclass": {
            "name": "media-type-change",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "PlaybackReadyEvent",
          "mixins": [
            {
              "name": "buildsVdsPlayerEvent",
              "module": "./src/core/player.events.ts"
            }
          ],
          "superclass": {
            "name": "playback-ready",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "PlaybackStartEvent",
          "mixins": [
            {
              "name": "buildsVdsPlayerEvent",
              "module": "./src/core/player.events.ts"
            }
          ],
          "superclass": {
            "name": "playback-start",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "PlaybackEndEvent",
          "mixins": [
            {
              "name": "buildsVdsPlayerEvent",
              "module": "./src/core/player.events.ts"
            }
          ],
          "superclass": {
            "name": "playback-end",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "ErrorEvent",
          "mixins": [
            {
              "name": "buildsVdsPlayerEvent",
              "module": "./src/core/player.events.ts"
            }
          ],
          "superclass": {
            "name": "error",
            "module": "./src/core/player.events.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "buildsVdsPlayerEvent",
          "declaration": {
            "name": "buildsVdsPlayerEvent",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "PlayEvent",
          "declaration": {
            "name": "PlayEvent",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "PauseEvent",
          "declaration": {
            "name": "PauseEvent",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "PlayingEvent",
          "declaration": {
            "name": "PlayingEvent",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "CurrentSrcChangeEvent",
          "declaration": {
            "name": "CurrentSrcChangeEvent",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "PosterChangeEvent",
          "declaration": {
            "name": "PosterChangeEvent",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "MutedChangeEvent",
          "declaration": {
            "name": "MutedChangeEvent",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "VolumeChangeEvent",
          "declaration": {
            "name": "VolumeChangeEvent",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "TimeChangeEvent",
          "declaration": {
            "name": "TimeChangeEvent",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "DurationChangeEvent",
          "declaration": {
            "name": "DurationChangeEvent",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "BufferedChangeEvent",
          "declaration": {
            "name": "BufferedChangeEvent",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "BufferingChangeEvent",
          "declaration": {
            "name": "BufferingChangeEvent",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "ViewTypeChangeEvent",
          "declaration": {
            "name": "ViewTypeChangeEvent",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "MediaTypeChangeEvent",
          "declaration": {
            "name": "MediaTypeChangeEvent",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "PlaybackReadyEvent",
          "declaration": {
            "name": "PlaybackReadyEvent",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "PlaybackStartEvent",
          "declaration": {
            "name": "PlaybackStartEvent",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "PlaybackEndEvent",
          "declaration": {
            "name": "PlaybackEndEvent",
            "module": "./src/core/player.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "ErrorEvent",
          "declaration": {
            "name": "ErrorEvent",
            "module": "./src/core/player.events.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/player.storybook.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "PLAYER_STORYBOOK_ARG_TYPES"
        },
        {
          "kind": "function",
          "name": "renderPlayerStorybookTemplate",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "{\n  aspectRatio = '16:9',\n  paused = true,\n  controls = true,\n  muted = false,\n  volume = 1,\n  currentTime = 0,\n  content = html``,\n}",
              "type": {
                "text": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PLAYER_STORYBOOK_ARG_TYPES",
          "declaration": {
            "name": "PLAYER_STORYBOOK_ARG_TYPES",
            "module": "./src/core/player.storybook.ts"
          }
        },
        {
          "kind": "js",
          "name": "renderPlayerStorybookTemplate",
          "declaration": {
            "name": "renderPlayerStorybookTemplate",
            "module": "./src/core/player.storybook.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/player.types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/vds-player.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "PLAYER_TAG_NAME"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PLAYER_TAG_NAME",
          "declaration": {
            "name": "PLAYER_TAG_NAME",
            "module": "./src/core/vds-player.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/shared/ResizeObserver.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "ResizeObserver",
          "members": [
            {
              "kind": "method",
              "name": "disconnect",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "observe",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "target",
                  "type": {
                    "text": "Element"
                  }
                },
                {
                  "name": "options",
                  "type": {
                    "text": "ResizeObserverOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "unobserve",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "target",
                  "type": {
                    "text": "Element"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ResizeObserver",
          "declaration": {
            "name": "ResizeObserver",
            "module": "./src/shared/ResizeObserver.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/shared/constants.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "LIB_PREFIX"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LIB_PREFIX",
          "declaration": {
            "name": "LIB_PREFIX",
            "module": "./src/shared/constants.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/shared/events.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "VdsCustomEvent",
          "superclass": {
            "name": "CustomEvent",
            "module": "./src/shared/events.ts"
          },
          "members": [
            {
              "kind": "field",
              "name": "TYPE",
              "static": true,
              "privacy": "public",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "Type"
              }
            },
            {
              "kind": "field",
              "name": "originalEvent",
              "type": {
                "text": "unknown"
              },
              "default": "originalEvent"
            }
          ]
        },
        {
          "kind": "function",
          "name": "buildVdsEvent"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VdsCustomEvent",
          "declaration": {
            "name": "VdsCustomEvent",
            "module": "./src/shared/events.ts"
          }
        },
        {
          "kind": "js",
          "name": "buildVdsEvent",
          "declaration": {
            "name": "buildVdsEvent",
            "module": "./src/shared/events.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/shared/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./constants"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./events"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ResizeObserver"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./storybook"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./types"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/shared/storybook.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/shared/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/utils/dom.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "safelyDefineCustomElement",
          "description": "Registers a custom element in the CustomElementRegistry. By \"safely\" we mean:\n\n- Called only client-side (`window` is defined).\n- The element is only registered if it hasn't been registered before under the given `name`."
        },
        {
          "kind": "function",
          "name": "getSlottedChildren",
          "description": "Returns elements assigned to the default slot in the shadow root. Filters out all nodes\nwhich are not of type `Node.ELEMENT_NODE`.",
          "return": {
            "type": {
              "text": "Element[]"
            }
          },
          "parameters": [
            {
              "name": "el",
              "description": "The element containing the slot.",
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "isColliding",
          "description": "Determines whether two elements are interecting in the DOM."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "safelyDefineCustomElement",
          "declaration": {
            "name": "safelyDefineCustomElement",
            "module": "./src/utils/dom.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "name",
          "declaration": {
            "name": "constructor",
            "module": "./src/utils/dom.ts"
          }
        },
        {
          "kind": "js",
          "name": "getSlottedChildren",
          "declaration": {
            "name": "getSlottedChildren",
            "module": "./src/utils/dom.ts"
          }
        },
        {
          "kind": "js",
          "name": "isColliding",
          "declaration": {
            "name": "isColliding",
            "module": "./src/utils/dom.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/utils/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./dom"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./network"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./promise"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./support"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./timing"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./unit"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/utils/network.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "tryParseJSON",
          "description": "Attempt to parse json into a POJO.",
          "return": {
            "type": {
              "text": "T | undefined"
            }
          },
          "parameters": [
            {
              "name": "json",
              "description": "The JSON object to parse.",
              "type": {
                "text": "unknown"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "isObjOrJSON",
          "description": "Check if the given value is JSON or a POJO."
        },
        {
          "kind": "variable",
          "name": "objOrParseJSON",
          "description": "If an object return otherwise try to parse it as json."
        },
        {
          "kind": "variable",
          "name": "loadImage",
          "description": "Load image avoiding xhr/fetch CORS issues. Server status can't be obtained this way\nunfortunately, so this uses \"naturalWidth\" to determine if the image has been loaded. By\ndefault it checks if it is at least 1px."
        },
        {
          "kind": "variable",
          "name": "loadScript",
          "description": "Loads a script into the DOM."
        },
        {
          "kind": "variable",
          "name": "decodeJSON",
          "description": "Tries to parse json and return a object."
        },
        {
          "kind": "variable",
          "name": "tryDecodeURIComponent",
          "description": "Attempts to safely decode a URI component, on failure it returns the given fallback."
        },
        {
          "kind": "variable",
          "name": "parseQueryString"
        },
        {
          "kind": "variable",
          "name": "serializeQueryString",
          "description": "Serializes the given params into a query string."
        },
        {
          "kind": "variable",
          "name": "preconnect",
          "description": "Notifies the browser to start establishing a connection with the given URL."
        },
        {
          "kind": "variable",
          "name": "appendQueryStringToURL",
          "description": "Safely appends the given query string to the given URL."
        },
        {
          "kind": "variable",
          "name": "appendParamsToURL",
          "description": "Serializes the given params into a query string and appends them to the given URL."
        },
        {
          "kind": "variable",
          "name": "decodeQueryString",
          "description": "Tries to convert a query string into a object."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "tryParseJSON",
          "declaration": {
            "name": "tryParseJSON",
            "module": "./src/utils/network.ts"
          }
        },
        {
          "kind": "js",
          "name": "isObjOrJSON",
          "declaration": {
            "name": "isObjOrJSON",
            "module": "./src/utils/network.ts"
          }
        },
        {
          "kind": "js",
          "name": "objOrParseJSON",
          "declaration": {
            "name": "objOrParseJSON",
            "module": "./src/utils/network.ts"
          }
        },
        {
          "kind": "js",
          "name": "loadImage",
          "declaration": {
            "name": "loadImage",
            "module": "./src/utils/network.ts"
          }
        },
        {
          "kind": "js",
          "name": "loadScript",
          "declaration": {
            "name": "loadScript",
            "module": "./src/utils/network.ts"
          }
        },
        {
          "kind": "js",
          "name": "decodeJSON",
          "declaration": {
            "name": "decodeJSON",
            "module": "./src/utils/network.ts"
          }
        },
        {
          "kind": "js",
          "name": "tryDecodeURIComponent",
          "declaration": {
            "name": "tryDecodeURIComponent",
            "module": "./src/utils/network.ts"
          }
        },
        {
          "kind": "js",
          "name": "parseQueryString",
          "declaration": {
            "name": "parseQueryString",
            "module": "./src/utils/network.ts"
          }
        },
        {
          "kind": "js",
          "name": "serializeQueryString",
          "declaration": {
            "name": "serializeQueryString",
            "module": "./src/utils/network.ts"
          }
        },
        {
          "kind": "js",
          "name": "preconnect",
          "declaration": {
            "name": "preconnect",
            "module": "./src/utils/network.ts"
          }
        },
        {
          "kind": "js",
          "name": "appendQueryStringToURL",
          "declaration": {
            "name": "appendQueryStringToURL",
            "module": "./src/utils/network.ts"
          }
        },
        {
          "kind": "js",
          "name": "appendParamsToURL",
          "declaration": {
            "name": "appendParamsToURL",
            "module": "./src/utils/network.ts"
          }
        },
        {
          "kind": "js",
          "name": "decodeQueryString",
          "declaration": {
            "name": "decodeQueryString",
            "module": "./src/utils/network.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/utils/promise.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "deferredPromise",
          "description": "Creates an empty Promise and defers resolving/rejecting it."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "deferredPromise",
          "declaration": {
            "name": "deferredPromise",
            "module": "./src/utils/promise.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/utils/support.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "IS_CLIENT"
        },
        {
          "kind": "variable",
          "name": "UA"
        },
        {
          "kind": "variable",
          "name": "IS_IOS"
        },
        {
          "kind": "variable",
          "name": "IS_ANDROID"
        },
        {
          "kind": "variable",
          "name": "IS_MOBILE"
        },
        {
          "kind": "variable",
          "name": "IS_IPHONE"
        },
        {
          "kind": "variable",
          "name": "IS_FIREFOX"
        },
        {
          "kind": "variable",
          "name": "IS_CHROME"
        },
        {
          "kind": "variable",
          "name": "IS_SAFARI"
        },
        {
          "kind": "variable",
          "name": "ORIGIN"
        },
        {
          "kind": "variable",
          "name": "canFullscreenVideo",
          "description": "Checks if a video player can enter fullscreen."
        },
        {
          "kind": "variable",
          "name": "canObserveIntersection",
          "description": "Checks whether the `IntersectionObserver` API is available."
        },
        {
          "kind": "variable",
          "name": "canRotateScreen",
          "description": "Checks if the screen orientation can be changed."
        },
        {
          "kind": "variable",
          "name": "isReducedMotionPreferred",
          "description": "Reduced motion iOS & MacOS setting."
        },
        {
          "kind": "variable",
          "name": "canPlayHLSNatively",
          "description": "Checks if the native HTML5 video player can play HLS."
        },
        {
          "kind": "variable",
          "name": "canUsePiPInChrome",
          "description": "Checks if the native HTML5 video player can enter picture-in-picture (PIP) mode when using\nthe Chrome browser."
        },
        {
          "kind": "variable",
          "name": "canUsePiPInSafari",
          "description": "Checks if the native HTML5 video player can enter picture-in-picture (PIP) mode when using\nthe desktop Safari browser, iOS Safari appears to \"support\" PiP through the check, however PiP\ndoes not function."
        },
        {
          "kind": "variable",
          "name": "canUsePiP",
          "description": "Checks if the native HTML5 video player can enter PIP."
        },
        {
          "kind": "variable",
          "name": "canAutoplay",
          "description": "To detect autoplay, we create a video element and call play on it, if it is `paused` after\na `play()` call, autoplay is supported. Although this unintuitive, it works across browsers\nand is currently the lightest way to detect autoplay without using a data source."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "IS_CLIENT",
          "declaration": {
            "name": "IS_CLIENT",
            "module": "./src/utils/support.ts"
          }
        },
        {
          "kind": "js",
          "name": "UA",
          "declaration": {
            "name": "UA",
            "module": "./src/utils/support.ts"
          }
        },
        {
          "kind": "js",
          "name": "IS_IOS",
          "declaration": {
            "name": "IS_IOS",
            "module": "./src/utils/support.ts"
          }
        },
        {
          "kind": "js",
          "name": "IS_ANDROID",
          "declaration": {
            "name": "IS_ANDROID",
            "module": "./src/utils/support.ts"
          }
        },
        {
          "kind": "js",
          "name": "IS_MOBILE",
          "declaration": {
            "name": "IS_MOBILE",
            "module": "./src/utils/support.ts"
          }
        },
        {
          "kind": "js",
          "name": "IS_IPHONE",
          "declaration": {
            "name": "IS_IPHONE",
            "module": "./src/utils/support.ts"
          }
        },
        {
          "kind": "js",
          "name": "IS_FIREFOX",
          "declaration": {
            "name": "IS_FIREFOX",
            "module": "./src/utils/support.ts"
          }
        },
        {
          "kind": "js",
          "name": "IS_CHROME",
          "declaration": {
            "name": "IS_CHROME",
            "module": "./src/utils/support.ts"
          }
        },
        {
          "kind": "js",
          "name": "IS_SAFARI",
          "declaration": {
            "name": "IS_SAFARI",
            "module": "./src/utils/support.ts"
          }
        },
        {
          "kind": "js",
          "name": "ORIGIN",
          "declaration": {
            "name": "ORIGIN",
            "module": "./src/utils/support.ts"
          }
        },
        {
          "kind": "js",
          "name": "canFullscreenVideo",
          "declaration": {
            "name": "canFullscreenVideo",
            "module": "./src/utils/support.ts"
          }
        },
        {
          "kind": "js",
          "name": "canObserveIntersection",
          "declaration": {
            "name": "canObserveIntersection",
            "module": "./src/utils/support.ts"
          }
        },
        {
          "kind": "js",
          "name": "canRotateScreen",
          "declaration": {
            "name": "canRotateScreen",
            "module": "./src/utils/support.ts"
          }
        },
        {
          "kind": "js",
          "name": "isReducedMotionPreferred",
          "declaration": {
            "name": "isReducedMotionPreferred",
            "module": "./src/utils/support.ts"
          }
        },
        {
          "kind": "js",
          "name": "canPlayHLSNatively",
          "declaration": {
            "name": "canPlayHLSNatively",
            "module": "./src/utils/support.ts"
          }
        },
        {
          "kind": "js",
          "name": "canUsePiPInChrome",
          "declaration": {
            "name": "canUsePiPInChrome",
            "module": "./src/utils/support.ts"
          }
        },
        {
          "kind": "js",
          "name": "canUsePiPInSafari",
          "declaration": {
            "name": "canUsePiPInSafari",
            "module": "./src/utils/support.ts"
          }
        },
        {
          "kind": "js",
          "name": "canUsePiP",
          "declaration": {
            "name": "canUsePiP",
            "module": "./src/utils/support.ts"
          }
        },
        {
          "kind": "js",
          "name": "canAutoplay",
          "declaration": {
            "name": "canAutoplay",
            "module": "./src/utils/support.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/utils/timing.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "debounce",
          "description": "Creates a debounced function that delays invoking func until after wait milliseconds have\nelapsed since the last time the debounced function was invoked."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "debounce",
          "declaration": {
            "name": "debounce",
            "module": "./src/utils/timing.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/utils/unit.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "noop",
          "description": "No-operation (noop)."
        },
        {
          "kind": "variable",
          "name": "isNull",
          "description": "Checks if `value` is `null`."
        },
        {
          "kind": "variable",
          "name": "isUndefined",
          "description": "Checks if `value` is `undefined`."
        },
        {
          "kind": "variable",
          "name": "isNil",
          "description": "Checks if `value` is `null` or `undefined`."
        },
        {
          "kind": "variable",
          "name": "getConstructor",
          "description": "Returns the constructor of the given `value`."
        },
        {
          "kind": "variable",
          "name": "isObject",
          "description": "Checks if `value` is classified as a `Object` object."
        },
        {
          "kind": "variable",
          "name": "isNumber",
          "description": "Checks if `value` is classified as a `Number` object."
        },
        {
          "kind": "variable",
          "name": "isString",
          "description": "Checks if `value` is classified as a `String` object."
        },
        {
          "kind": "variable",
          "name": "isBoolean",
          "description": "Checks if `value` is classified as a `Boolean` object."
        },
        {
          "kind": "variable",
          "name": "isFunction",
          "description": "Checks if `value` is classified as a `Function` object."
        },
        {
          "kind": "variable",
          "name": "isArray",
          "description": "Checks if `value` is classified as an `Array` object."
        },
        {
          "kind": "variable",
          "name": "isInstanceOf",
          "description": "Checks if `value` is an instanceof the given `constructor`."
        },
        {
          "kind": "variable",
          "name": "isPrototypeOf",
          "description": "Checks if the `value` prototype chain includes the given `object`."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "noop",
          "declaration": {
            "name": "noop",
            "module": "./src/utils/unit.ts"
          }
        },
        {
          "kind": "js",
          "name": "isNull",
          "declaration": {
            "name": "isNull",
            "module": "./src/utils/unit.ts"
          }
        },
        {
          "kind": "js",
          "name": "isUndefined",
          "declaration": {
            "name": "isUndefined",
            "module": "./src/utils/unit.ts"
          }
        },
        {
          "kind": "js",
          "name": "isNil",
          "declaration": {
            "name": "isNil",
            "module": "./src/utils/unit.ts"
          }
        },
        {
          "kind": "js",
          "name": "getConstructor",
          "declaration": {
            "name": "getConstructor",
            "module": "./src/utils/unit.ts"
          }
        },
        {
          "kind": "js",
          "name": "isObject",
          "declaration": {
            "name": "isObject",
            "module": "./src/utils/unit.ts"
          }
        },
        {
          "kind": "js",
          "name": "isNumber",
          "declaration": {
            "name": "isNumber",
            "module": "./src/utils/unit.ts"
          }
        },
        {
          "kind": "js",
          "name": "isString",
          "declaration": {
            "name": "isString",
            "module": "./src/utils/unit.ts"
          }
        },
        {
          "kind": "js",
          "name": "isBoolean",
          "declaration": {
            "name": "isBoolean",
            "module": "./src/utils/unit.ts"
          }
        },
        {
          "kind": "js",
          "name": "isFunction",
          "declaration": {
            "name": "isFunction",
            "module": "./src/utils/unit.ts"
          }
        },
        {
          "kind": "js",
          "name": "isArray",
          "declaration": {
            "name": "isArray",
            "module": "./src/utils/unit.ts"
          }
        },
        {
          "kind": "js",
          "name": "isInstanceOf",
          "declaration": {
            "name": "isInstanceOf",
            "module": "./src/utils/unit.ts"
          }
        },
        {
          "kind": "js",
          "name": "isPrototypeOf",
          "declaration": {
            "name": "isPrototypeOf",
            "module": "./src/utils/unit.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/device/DeviceObserver.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "DeviceChangeEvent",
          "mixins": [
            {
              "name": "buildVdsEvent",
              "module": "/src/core/shared"
            }
          ],
          "superclass": {
            "name": "device-change",
            "module": "./src/core/device/DeviceObserver.ts"
          }
        },
        {
          "kind": "variable",
          "name": "onDeviceChange",
          "description": "Listens for device changes (mobile/desktop) and invokes a callback whether the current\nview is mobile. It determines the type by either listening for `resize` events\non the window (if API is available), otherwise it'll fallback to parsing the user agent string."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DeviceChangeEvent",
          "declaration": {
            "name": "DeviceChangeEvent",
            "module": "./src/core/device/DeviceObserver.ts"
          }
        },
        {
          "kind": "js",
          "name": "onDeviceChange",
          "declaration": {
            "name": "onDeviceChange",
            "module": "./src/core/device/DeviceObserver.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/device/DeviceObserverMixin.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "DeviceObserverMixin",
          "description": "Mixes in device properties and contexts which are automatically updated when the\ndevice is changed. This mixin also dispatches a `DeviceChangeEvent` and sets mobile/desktop\nattributes on the component.",
          "return": {
            "type": {
              "text": "DeviceObserverCocktail<T>"
            }
          },
          "parameters": [
            {
              "name": "Base",
              "description": "the constructor to mix into.",
              "type": {
                "text": "T"
              }
            }
          ]
        },
        {
          "kind": "class",
          "name": "DeviceObserverMixin",
          "events": [
            {
              "type": {
                "text": "DeviceChangeEvent"
              }
            }
          ],
          "superclass": {
            "name": "Base",
            "module": "./src/core/device/DeviceObserverMixin.ts"
          },
          "members": [
            {
              "kind": "field",
              "name": "[DISPOSAL]",
              "privacy": "protected",
              "default": "new Disposal()"
            },
            {
              "kind": "field",
              "name": "deviceCtx",
              "privacy": "protected",
              "default": "deviceContext.device.defaultValue"
            },
            {
              "kind": "field",
              "name": "isMobileDeviceCtx",
              "privacy": "protected",
              "default": "deviceContext.isMobileDevice.defaultValue"
            },
            {
              "kind": "field",
              "name": "isDesktopDeviceCtx",
              "privacy": "protected",
              "default": "deviceContext.isDesktopDevice.defaultValue"
            },
            {
              "kind": "field",
              "name": "mobileDeviceAttrName",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'mobile'"
            },
            {
              "kind": "field",
              "name": "desktopDeviceAttrName",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'desktop'"
            },
            {
              "kind": "method",
              "name": "listenToDeviceChanges",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleDeviceChange",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "device",
                  "type": {
                    "text": "Device"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "device",
              "privacy": "public",
              "type": {
                "text": "DeviceObserver['device']"
              }
            },
            {
              "kind": "field",
              "name": "isMobileDevice",
              "privacy": "public",
              "type": {
                "text": "DeviceObserver['isMobileDevice']"
              }
            },
            {
              "kind": "field",
              "name": "isDesktopDevice",
              "privacy": "public",
              "type": {
                "text": "DeviceObserver['isDesktopDevice']"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DeviceObserverMixin",
          "declaration": {
            "name": "DeviceObserverMixin",
            "module": "./src/core/device/DeviceObserverMixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/device/device.context.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "deviceContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "deviceContext",
          "declaration": {
            "name": "deviceContext",
            "module": "./src/core/device/device.context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/device/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./device.context"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./DeviceObserver"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./DeviceObserverMixin"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/mixins/AspectRatioMixin.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "AspectRatioChangeEvent",
          "mixins": [
            {
              "name": "buildVdsEvent",
              "module": "/src/core/shared"
            }
          ],
          "superclass": {
            "name": "aspect-ratio-change",
            "module": "./src/core/mixins/AspectRatioMixin.ts"
          }
        },
        {
          "kind": "function",
          "name": "AspectRatioMixin",
          "description": "Mixes in an aspect ratio prop/attr and some helper methods for calculating the current\nratio.",
          "return": {
            "type": {
              "text": "AspectRatioCocktail<T>"
            }
          },
          "parameters": [
            {
              "name": "Base",
              "description": "The constructor to mix into.",
              "type": {
                "text": "T"
              }
            }
          ]
        },
        {
          "kind": "class",
          "name": "AspectRatioMixin",
          "superclass": {
            "name": "Base",
            "module": "./src/core/mixins/AspectRatioMixin.ts"
          },
          "members": [
            {
              "kind": "field",
              "name": "_aspectRatio",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "default": "'16:9'"
            },
            {
              "kind": "field",
              "name": "aspectRatio",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "calcAspectRatio",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "number"
                }
              }
            },
            {
              "kind": "method",
              "name": "getAspectRatioPadding",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "string"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleAspectRatioChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "AspectRatioChangeEvent"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AspectRatioChangeEvent",
          "declaration": {
            "name": "AspectRatioChangeEvent",
            "module": "./src/core/mixins/AspectRatioMixin.ts"
          }
        },
        {
          "kind": "js",
          "name": "AspectRatioMixin",
          "declaration": {
            "name": "AspectRatioMixin",
            "module": "./src/core/mixins/AspectRatioMixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/mixins/MediaTypeMixin.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "MediaTypeMixin",
          "description": "Mixes in properties for checking the current view type, and handles updating the media\ntype when certain provider events are emitted.",
          "return": {
            "type": {
              "text": "MediaTypeCocktail<T>"
            }
          },
          "parameters": [
            {
              "name": "Base",
              "description": "The constructor to mix into.",
              "type": {
                "text": "T"
              }
            }
          ]
        },
        {
          "kind": "class",
          "name": "MediaTypeMixin",
          "superclass": {
            "name": "Base",
            "module": "./src/core/mixins/MediaTypeMixin.ts"
          },
          "members": [
            {
              "kind": "field",
              "name": "_mediaType",
              "privacy": "protected",
              "default": "MediaType.Unknown"
            },
            {
              "kind": "method",
              "name": "handleMediaTypeChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "ProviderMediaTypeChangeEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMediaTypeReset",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "mediaType",
              "privacy": "public",
              "type": {
                "text": "MediaType"
              }
            },
            {
              "kind": "field",
              "name": "isAudio",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "isVideo",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MediaTypeMixin",
          "declaration": {
            "name": "MediaTypeMixin",
            "module": "./src/core/mixins/MediaTypeMixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/mixins/PlayerContextMixin.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "PlayerContextMixin",
          "description": "Mixes in context properties (providers) and handles updating them when provider events are\nemitted.",
          "return": {
            "type": {
              "text": "PlayerContextCocktail<T>"
            }
          },
          "parameters": [
            {
              "name": "Base",
              "description": "The constructor to mix into.",
              "type": {
                "text": "T"
              }
            }
          ]
        },
        {
          "kind": "class",
          "name": "PlayerContextMixin",
          "superclass": {
            "name": "PlayerContextProvider",
            "module": "/src/core/player.types"
          },
          "members": [
            {
              "kind": "field",
              "name": "context",
              "privacy": "public",
              "type": {
                "text": "PlayerContextProvider"
              }
            },
            {
              "kind": "field",
              "name": "softResettableCtxProps",
              "privacy": "protected",
              "default": "new Set<keyof PlayerContext>([\n      'paused',\n      'currentTime',\n      'duration',\n      'buffered',\n      'isPlaying',\n      'isBuffering',\n      'isPlaybackReady',\n      'hasPlaybackStarted',\n      'hasPlaybackEnded',\n      'mediaType',\n    ])"
            },
            {
              "kind": "method",
              "name": "softResetPlayerContext",
              "privacy": "protected",
              "description": "When the `currentSrc` is changed this method is called to update any context properties\nthat need to be reset. Important to note that not all properties are reset, only the\nproperties in the `softResettableCtxProps` set."
            },
            {
              "kind": "method",
              "name": "hardResetPlayerContext",
              "privacy": "protected",
              "description": "Called when the provider disconnects, resets the player context completely."
            },
            {
              "kind": "method",
              "name": "handleAspectRatioContextUpdate",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "AspectRatioChangeEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleDisconnectContextUpdate",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "handlePlayContextUpdate",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "handlePauseContextUpdate",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "handlePlayingContextUpdate",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "handleTimeContextUpdate",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "ProviderTimeChangeEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleCurrentSrcContextUpdate",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "ProviderSrcChangeEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handlePosterContextUpdate",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "ProviderPosterChangeEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMutedContextUpdate",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "ProviderMutedChangeEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleVolumeContextUpdate",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "ProviderVolumeChangeEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleDurationContextUpdate",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "ProviderDurationChangeEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleBufferedContextUpdate",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "ProviderBufferedChangeEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleBufferingContextUpdate",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "ProviderBufferingChangeEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleViewTypeContextUpdate",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "ProviderViewTypeChangeEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMediaTypeContextUpdate",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "ProviderMediaTypeChangeEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handlePlaybackReadyContextUpdate",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "handlePlaybackStartContextUpdate",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "handlePlaybackEndContextUpdate",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "currentSrcCtx",
              "privacy": "public",
              "default": "playerContext.currentSrc.defaultValue"
            },
            {
              "kind": "field",
              "name": "volumeCtx",
              "privacy": "public",
              "default": "playerContext.volume.defaultValue"
            },
            {
              "kind": "field",
              "name": "currentTimeCtx",
              "privacy": "public",
              "default": "playerContext.currentTime.defaultValue"
            },
            {
              "kind": "field",
              "name": "pausedCtx",
              "privacy": "public",
              "default": "playerContext.paused.defaultValue"
            },
            {
              "kind": "field",
              "name": "controlsCtx",
              "privacy": "public",
              "default": "playerContext.controls.defaultValue"
            },
            {
              "kind": "field",
              "name": "currentPosterCtx",
              "privacy": "public",
              "default": "playerContext.currentPoster.defaultValue"
            },
            {
              "kind": "field",
              "name": "mutedCtx",
              "privacy": "public",
              "default": "playerContext.muted.defaultValue"
            },
            {
              "kind": "field",
              "name": "aspectRatioCtx",
              "privacy": "public",
              "default": "playerContext.aspectRatio.defaultValue"
            },
            {
              "kind": "field",
              "name": "durationCtx",
              "privacy": "public",
              "default": "playerContext.duration.defaultValue"
            },
            {
              "kind": "field",
              "name": "bufferedCtx",
              "privacy": "public",
              "default": "playerContext.buffered.defaultValue"
            },
            {
              "kind": "field",
              "name": "isBufferingCtx",
              "privacy": "public",
              "default": "playerContext.isBuffering.defaultValue"
            },
            {
              "kind": "field",
              "name": "isPlayingCtx",
              "privacy": "public",
              "default": "playerContext.isPlaying.defaultValue"
            },
            {
              "kind": "field",
              "name": "hasPlaybackStartedCtx",
              "privacy": "public",
              "default": "playerContext.hasPlaybackStarted.defaultValue"
            },
            {
              "kind": "field",
              "name": "hasPlaybackEndedCtx",
              "privacy": "public",
              "default": "playerContext.hasPlaybackEnded.defaultValue"
            },
            {
              "kind": "field",
              "name": "isPlaybackReadyCtx",
              "privacy": "public",
              "default": "playerContext.isPlaybackReady.defaultValue"
            },
            {
              "kind": "field",
              "name": "viewTypeCtx",
              "privacy": "public",
              "default": "playerContext.viewType.defaultValue"
            },
            {
              "kind": "field",
              "name": "isAudioViewCtx",
              "privacy": "public",
              "default": "playerContext.isAudioView.defaultValue"
            },
            {
              "kind": "field",
              "name": "isVideoViewCtx",
              "privacy": "public",
              "default": "playerContext.isVideoView.defaultValue"
            },
            {
              "kind": "field",
              "name": "mediaTypeCtx",
              "privacy": "public",
              "default": "playerContext.mediaType.defaultValue"
            },
            {
              "kind": "field",
              "name": "isAudioCtx",
              "privacy": "public",
              "default": "playerContext.isAudio.defaultValue"
            },
            {
              "kind": "field",
              "name": "isVideoCtx",
              "privacy": "public",
              "default": "playerContext.isVideo.defaultValue"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PlayerContextMixin",
          "declaration": {
            "name": "PlayerContextMixin",
            "module": "./src/core/mixins/PlayerContextMixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/mixins/ViewTypeMixin.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "ViewTypeMixin",
          "description": "Mixes in properties for checking the current view type, updates the view type when\nthe `ProviderViewTypeChange` event is fired, and sets audio/video attributes on the\ncomponent.",
          "return": {
            "type": {
              "text": "ViewTypeCocktail<T>"
            }
          },
          "parameters": [
            {
              "name": "Base",
              "description": "The constructor to mix into.",
              "type": {
                "text": "T"
              }
            }
          ]
        },
        {
          "kind": "class",
          "name": "ViewTypeMixin",
          "superclass": {
            "name": "Base",
            "module": "./src/core/mixins/ViewTypeMixin.ts"
          },
          "members": [
            {
              "kind": "field",
              "name": "_viewType",
              "privacy": "protected",
              "default": "ViewType.Unknown"
            },
            {
              "kind": "field",
              "name": "audioViewAttrName",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'audio'"
            },
            {
              "kind": "field",
              "name": "videoViewAttrName",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'video'"
            },
            {
              "kind": "method",
              "name": "handleViewTypeChange",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "ProviderViewTypeChangeEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleViewTypeReset",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "viewType",
              "privacy": "public",
              "type": {
                "text": "ViewType"
              }
            },
            {
              "kind": "field",
              "name": "isAudioView",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "isVideoView",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ViewTypeMixin",
          "declaration": {
            "name": "ViewTypeMixin",
            "module": "./src/core/mixins/ViewTypeMixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/mixins/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./PlayerContextMixin"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./MediaTypeMixin"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ViewTypeMixin"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./AspectRatioMixin"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/provider/MediaProvider.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "MediaProvider",
          "events": [
            {
              "type": {
                "text": "ProviderConnectEvent"
              }
            },
            {
              "name": "vds-aspect-ratio-change",
              "type": {
                "text": "AspectRatioChangeEvent"
              },
              "description": "Emitted when the aspect ratio changes."
            },
            {
              "name": "vds-provider-connect",
              "type": {
                "text": "ProviderConnectEvent"
              },
              "description": "Emitted when the provider attempts to connect to the player."
            },
            {
              "name": "vds-provider-disconnect",
              "type": {
                "text": "ProviderDisconnectEvent"
              },
              "description": "Emitted when the provider attempts to disconnect from the player."
            },
            {
              "name": "vds-provider-play",
              "type": {
                "text": "ProviderPlayEvent"
              },
              "description": "Emitted when playback attempts to start."
            },
            {
              "name": "vds-provider-pause",
              "type": {
                "text": "ProviderPauseEvent"
              },
              "description": "Emitted when playback pauses."
            },
            {
              "name": "vds-provider-playing",
              "type": {
                "text": "ProviderPlayingEvent"
              },
              "description": "Emitted when playback being playback."
            },
            {
              "name": "vds-provider-src-change",
              "type": {
                "text": "ProviderSrcChangeEvent"
              },
              "description": "Emitted when the current src changes."
            },
            {
              "name": "vds-provider-poster-change",
              "type": {
                "text": "ProviderPosterChangeEvent"
              },
              "description": "Emitted when the current poster changes."
            },
            {
              "name": "vds-provider-muted-change",
              "type": {
                "text": "ProviderMutedChangeEvent"
              },
              "description": "Emitted when the muted state of the current provider changes."
            },
            {
              "name": "vds-provider-volume-change",
              "type": {
                "text": "ProviderVolumeChangeEvent"
              },
              "description": "Emitted when the volume state of the current provider changes."
            },
            {
              "name": "vds-provider-time-change",
              "type": {
                "text": "ProviderTimeChangeEvent"
              },
              "description": "Emitted when the current playback time changes."
            },
            {
              "name": "vds-provider-duration-change",
              "type": {
                "text": "ProviderDurationChangeEvent"
              },
              "description": "Emitted when the length of the media changes."
            },
            {
              "name": "vds-provider-buffered-change",
              "type": {
                "text": "ProviderBufferedChangeEvent"
              },
              "description": "Emitted when the length of the media downloaded changes."
            },
            {
              "name": "vds-provider-buffering-change",
              "type": {
                "text": "ProviderBufferingChangeEvent"
              },
              "description": "Emitted when playback resumes/stops due to lack of data."
            },
            {
              "name": "vds-provider-view-type-change",
              "type": {
                "text": "ProviderViewTypeChangeEvent"
              },
              "description": "Emitted when the view type of the current provider/media changes."
            },
            {
              "name": "vds-provider-media-type-change",
              "type": {
                "text": "ProviderMediaTypeChangeEvent"
              },
              "description": "Emitted when the media type of the current provider/media changes."
            },
            {
              "name": "vds-provider-playback-ready",
              "type": {
                "text": "ProviderPlaybackReadyEvent"
              },
              "description": "Emitted when playback is ready to start - analgous with `canPlayThrough`."
            },
            {
              "name": "vds-provider-playback-start",
              "type": {
                "text": "ProviderPlaybackStartEvent"
              },
              "description": "Emitted when playback has started (`currentTime > 0`)."
            },
            {
              "name": "vds-provider-playback-end",
              "type": {
                "text": "ProviderPlaybackEndEvent"
              },
              "description": "Emitted when playback ends (`currentTime === duration`)."
            },
            {
              "name": "vds-provider-error",
              "type": {
                "text": "ProviderErrorEvent"
              },
              "description": "Emitted when a provider encounters an error during media loading/playback."
            }
          ],
          "mixins": [
            {
              "name": "ProviderMixin",
              "module": "/src/core"
            }
          ],
          "superclass": {
            "name": "PlayerMethods",
            "module": "/src/core/provider/player.types"
          },
          "members": [
            {
              "kind": "field",
              "name": "paused",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "volume",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "currentTime",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "muted",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "controls",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "internalPlayer",
              "type": {
                "text": "InternalPlayerType | undefined"
              }
            },
            {
              "kind": "field",
              "name": "isPlaybackReady",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "isPlaying",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "currentSrc",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "currentPoster",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "duration",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "buffered",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "isBuffering",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "hasPlaybackStarted",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "hasPlaybackEnded",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "method",
              "name": "canPlayType",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "play",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "pause",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MediaProvider",
          "declaration": {
            "name": "MediaProvider",
            "module": "./src/core/provider/MediaProvider.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/provider/MockMediaProvider.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "MockMediaProvider",
          "superclass": {
            "name": "MediaProvider",
            "module": "/src/core/provider/provider"
          },
          "members": [
            {
              "kind": "field",
              "name": "volume",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "1"
            },
            {
              "kind": "field",
              "name": "currentTime",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "paused",
              "privacy": "public",
              "default": "true"
            },
            {
              "kind": "field",
              "name": "muted",
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "controls",
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "currentSrc",
              "privacy": "public",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "currentPoster",
              "privacy": "public",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "isPlaybackReady",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "isPlaying",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "internalPlayer",
              "privacy": "public",
              "type": {
                "text": "unknown"
              }
            },
            {
              "kind": "field",
              "name": "duration",
              "privacy": "public",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "buffered",
              "privacy": "public",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "isBuffering",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "hasPlaybackStarted",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "hasPlaybackEnded",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "method",
              "name": "canPlayType",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "play",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "pause",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "ProviderConnectEvent"
              },
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-aspect-ratio-change",
              "type": {
                "text": "AspectRatioChangeEvent"
              },
              "description": "Emitted when the aspect ratio changes.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-connect",
              "type": {
                "text": "ProviderConnectEvent"
              },
              "description": "Emitted when the provider attempts to connect to the player.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-disconnect",
              "type": {
                "text": "ProviderDisconnectEvent"
              },
              "description": "Emitted when the provider attempts to disconnect from the player.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-play",
              "type": {
                "text": "ProviderPlayEvent"
              },
              "description": "Emitted when playback attempts to start.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-pause",
              "type": {
                "text": "ProviderPauseEvent"
              },
              "description": "Emitted when playback pauses.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-playing",
              "type": {
                "text": "ProviderPlayingEvent"
              },
              "description": "Emitted when playback being playback.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-src-change",
              "type": {
                "text": "ProviderSrcChangeEvent"
              },
              "description": "Emitted when the current src changes.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-poster-change",
              "type": {
                "text": "ProviderPosterChangeEvent"
              },
              "description": "Emitted when the current poster changes.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-muted-change",
              "type": {
                "text": "ProviderMutedChangeEvent"
              },
              "description": "Emitted when the muted state of the current provider changes.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-volume-change",
              "type": {
                "text": "ProviderVolumeChangeEvent"
              },
              "description": "Emitted when the volume state of the current provider changes.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-time-change",
              "type": {
                "text": "ProviderTimeChangeEvent"
              },
              "description": "Emitted when the current playback time changes.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-duration-change",
              "type": {
                "text": "ProviderDurationChangeEvent"
              },
              "description": "Emitted when the length of the media changes.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-buffered-change",
              "type": {
                "text": "ProviderBufferedChangeEvent"
              },
              "description": "Emitted when the length of the media downloaded changes.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-buffering-change",
              "type": {
                "text": "ProviderBufferingChangeEvent"
              },
              "description": "Emitted when playback resumes/stops due to lack of data.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-view-type-change",
              "type": {
                "text": "ProviderViewTypeChangeEvent"
              },
              "description": "Emitted when the view type of the current provider/media changes.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-media-type-change",
              "type": {
                "text": "ProviderMediaTypeChangeEvent"
              },
              "description": "Emitted when the media type of the current provider/media changes.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-playback-ready",
              "type": {
                "text": "ProviderPlaybackReadyEvent"
              },
              "description": "Emitted when playback is ready to start - analgous with `canPlayThrough`.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-playback-start",
              "type": {
                "text": "ProviderPlaybackStartEvent"
              },
              "description": "Emitted when playback has started (`currentTime > 0`).",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-playback-end",
              "type": {
                "text": "ProviderPlaybackEndEvent"
              },
              "description": "Emitted when playback ends (`currentTime === duration`).",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-error",
              "type": {
                "text": "ProviderErrorEvent"
              },
              "description": "Emitted when a provider encounters an error during media loading/playback.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MockMediaProvider",
          "declaration": {
            "name": "MockMediaProvider",
            "module": "./src/core/provider/MockMediaProvider.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/provider/ProviderMixin.ts",
      "declarations": [
        {
          "kind": "mixin",
          "name": "ProviderMixin",
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": ""
              },
              "description": "- the constructor to mix into."
            }
          ],
          "mixins": [
            {
              "name": "AspectRatioMixin",
              "module": "/src/core/provider/mixins"
            },
            {
              "name": "ViewTypeMixin",
              "module": "/src/core/provider/mixins"
            },
            {
              "name": "MediaTypeMixin",
              "module": "/src/core/provider/mixins"
            },
            {
              "name": "UuidMixin",
              "module": "/src/core/provider/uuid"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ProviderMixin",
          "declaration": {
            "name": "ProviderMixin",
            "module": "./src/core/provider/ProviderMixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/provider/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./provider.events"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./MediaProvider"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ProviderMixin"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/provider/provider.events.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "PROVIDER_EVENT_PREFIX"
        },
        {
          "kind": "function",
          "name": "buildVdsProviderEvent",
          "return": {
            "type": {
              "text": "ProviderEventConstructor<T>"
            }
          },
          "parameters": [
            {
              "name": "type",
              "type": {
                "text": "T"
              }
            }
          ]
        },
        {
          "kind": "class",
          "name": "ProviderConnectEvent",
          "mixins": [
            {
              "name": "buildVdsProviderEvent",
              "module": "./src/core/provider/provider.events.ts"
            }
          ],
          "superclass": {
            "name": "connect",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "ProviderDisconnectEvent",
          "mixins": [
            {
              "name": "buildVdsProviderEvent",
              "module": "./src/core/provider/provider.events.ts"
            }
          ],
          "superclass": {
            "name": "disconnect",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "ProviderPlayEvent",
          "mixins": [
            {
              "name": "buildVdsProviderEvent",
              "module": "./src/core/provider/provider.events.ts"
            }
          ],
          "superclass": {
            "name": "play",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "ProviderPauseEvent",
          "mixins": [
            {
              "name": "buildVdsProviderEvent",
              "module": "./src/core/provider/provider.events.ts"
            }
          ],
          "superclass": {
            "name": "pause",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "ProviderPlayingEvent",
          "mixins": [
            {
              "name": "buildVdsProviderEvent",
              "module": "./src/core/provider/provider.events.ts"
            }
          ],
          "superclass": {
            "name": "playing",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "ProviderSrcChangeEvent",
          "mixins": [
            {
              "name": "buildVdsProviderEvent",
              "module": "./src/core/provider/provider.events.ts"
            }
          ],
          "superclass": {
            "name": "src-change",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "ProviderPosterChangeEvent",
          "mixins": [
            {
              "name": "buildVdsProviderEvent",
              "module": "./src/core/provider/provider.events.ts"
            }
          ],
          "superclass": {
            "name": "poster-change",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "ProviderMutedChangeEvent",
          "mixins": [
            {
              "name": "buildVdsProviderEvent",
              "module": "./src/core/provider/provider.events.ts"
            }
          ],
          "superclass": {
            "name": "muted-change",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "ProviderVolumeChangeEvent",
          "mixins": [
            {
              "name": "buildVdsProviderEvent",
              "module": "./src/core/provider/provider.events.ts"
            }
          ],
          "superclass": {
            "name": "volume-change",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "ProviderTimeChangeEvent",
          "mixins": [
            {
              "name": "buildVdsProviderEvent",
              "module": "./src/core/provider/provider.events.ts"
            }
          ],
          "superclass": {
            "name": "time-change",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "ProviderDurationChangeEvent",
          "mixins": [
            {
              "name": "buildVdsProviderEvent",
              "module": "./src/core/provider/provider.events.ts"
            }
          ],
          "superclass": {
            "name": "duration-change",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "ProviderBufferedChangeEvent",
          "mixins": [
            {
              "name": "buildVdsProviderEvent",
              "module": "./src/core/provider/provider.events.ts"
            }
          ],
          "superclass": {
            "name": "buffered-change",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "ProviderBufferingChangeEvent",
          "mixins": [
            {
              "name": "buildVdsProviderEvent",
              "module": "./src/core/provider/provider.events.ts"
            }
          ],
          "superclass": {
            "name": "buffering-change",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "ProviderViewTypeChangeEvent",
          "mixins": [
            {
              "name": "buildVdsProviderEvent",
              "module": "./src/core/provider/provider.events.ts"
            }
          ],
          "superclass": {
            "name": "view-type-change",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "ProviderMediaTypeChangeEvent",
          "mixins": [
            {
              "name": "buildVdsProviderEvent",
              "module": "./src/core/provider/provider.events.ts"
            }
          ],
          "superclass": {
            "name": "media-type-change",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "ProviderPlaybackReadyEvent",
          "mixins": [
            {
              "name": "buildVdsProviderEvent",
              "module": "./src/core/provider/provider.events.ts"
            }
          ],
          "superclass": {
            "name": "playback-ready",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "ProviderPlaybackStartEvent",
          "mixins": [
            {
              "name": "buildVdsProviderEvent",
              "module": "./src/core/provider/provider.events.ts"
            }
          ],
          "superclass": {
            "name": "playback-start",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "ProviderPlaybackEndEvent",
          "mixins": [
            {
              "name": "buildVdsProviderEvent",
              "module": "./src/core/provider/provider.events.ts"
            }
          ],
          "superclass": {
            "name": "playback-end",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "ProviderErrorEvent",
          "mixins": [
            {
              "name": "buildVdsProviderEvent",
              "module": "./src/core/provider/provider.events.ts"
            }
          ],
          "superclass": {
            "name": "error",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "variable",
          "name": "ALL_PROVIDER_EVENT_TYPES",
          "type": {
            "text": "VdsProviderEventType[]"
          }
        },
        {
          "kind": "variable",
          "name": "PROVIDER_EVENT_TYPE_TO_PLAYER_EVENT_MAP",
          "description": "Map of provider event types to the corresponding player event constructor. Most provider events\nmap 1:1 with player events, so this map is used to find the matching event. This is used by the\nevent translation unit inside the player."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PROVIDER_EVENT_PREFIX",
          "declaration": {
            "name": "PROVIDER_EVENT_PREFIX",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "buildVdsProviderEvent",
          "declaration": {
            "name": "buildVdsProviderEvent",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "ProviderConnectEvent",
          "declaration": {
            "name": "ProviderConnectEvent",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "ProviderDisconnectEvent",
          "declaration": {
            "name": "ProviderDisconnectEvent",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "ProviderPlayEvent",
          "declaration": {
            "name": "ProviderPlayEvent",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "ProviderPauseEvent",
          "declaration": {
            "name": "ProviderPauseEvent",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "ProviderPlayingEvent",
          "declaration": {
            "name": "ProviderPlayingEvent",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "ProviderSrcChangeEvent",
          "declaration": {
            "name": "ProviderSrcChangeEvent",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "ProviderPosterChangeEvent",
          "declaration": {
            "name": "ProviderPosterChangeEvent",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "ProviderMutedChangeEvent",
          "declaration": {
            "name": "ProviderMutedChangeEvent",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "ProviderVolumeChangeEvent",
          "declaration": {
            "name": "ProviderVolumeChangeEvent",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "ProviderTimeChangeEvent",
          "declaration": {
            "name": "ProviderTimeChangeEvent",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "ProviderDurationChangeEvent",
          "declaration": {
            "name": "ProviderDurationChangeEvent",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "ProviderBufferedChangeEvent",
          "declaration": {
            "name": "ProviderBufferedChangeEvent",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "ProviderBufferingChangeEvent",
          "declaration": {
            "name": "ProviderBufferingChangeEvent",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "ProviderViewTypeChangeEvent",
          "declaration": {
            "name": "ProviderViewTypeChangeEvent",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "ProviderMediaTypeChangeEvent",
          "declaration": {
            "name": "ProviderMediaTypeChangeEvent",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "ProviderPlaybackReadyEvent",
          "declaration": {
            "name": "ProviderPlaybackReadyEvent",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "ProviderPlaybackStartEvent",
          "declaration": {
            "name": "ProviderPlaybackStartEvent",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "ProviderPlaybackEndEvent",
          "declaration": {
            "name": "ProviderPlaybackEndEvent",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "ProviderErrorEvent",
          "declaration": {
            "name": "ProviderErrorEvent",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "ALL_PROVIDER_EVENT_TYPES",
          "declaration": {
            "name": "ALL_PROVIDER_EVENT_TYPES",
            "module": "./src/core/provider/provider.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "PROVIDER_EVENT_TYPE_TO_PLAYER_EVENT_MAP",
          "declaration": {
            "name": "PROVIDER_EVENT_TYPE_TO_PLAYER_EVENT_MAP",
            "module": "./src/core/provider/provider.events.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/provider/vds-mock-media-provider.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "MOCK_MEDIA_PROVIDER_TAG_NAME"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MOCK_MEDIA_PROVIDER_TAG_NAME",
          "declaration": {
            "name": "MOCK_MEDIA_PROVIDER_TAG_NAME",
            "module": "./src/core/provider/vds-mock-media-provider.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/tests/FakeConsumer.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "FakeConsumer",
          "superclass": {
            "name": "LitElement",
            "package": "lit-element"
          },
          "members": [
            {
              "kind": "field",
              "name": "uuid",
              "privacy": "public",
              "default": "playerContext.uuid.defaultValue"
            },
            {
              "kind": "field",
              "name": "currentSrc",
              "privacy": "public",
              "default": "playerContext.currentSrc.defaultValue"
            },
            {
              "kind": "field",
              "name": "volume",
              "privacy": "public",
              "default": "playerContext.volume.defaultValue"
            },
            {
              "kind": "field",
              "name": "currentTime",
              "privacy": "public",
              "default": "playerContext.currentTime.defaultValue"
            },
            {
              "kind": "field",
              "name": "paused",
              "privacy": "public",
              "default": "playerContext.paused.defaultValue"
            },
            {
              "kind": "field",
              "name": "controls",
              "privacy": "public",
              "default": "playerContext.controls.defaultValue"
            },
            {
              "kind": "field",
              "name": "currentPoster",
              "privacy": "public",
              "default": "playerContext.currentPoster.defaultValue"
            },
            {
              "kind": "field",
              "name": "muted",
              "privacy": "public",
              "default": "playerContext.muted.defaultValue"
            },
            {
              "kind": "field",
              "name": "aspectRatio",
              "privacy": "public",
              "default": "playerContext.aspectRatio.defaultValue"
            },
            {
              "kind": "field",
              "name": "duration",
              "privacy": "public",
              "default": "playerContext.duration.defaultValue"
            },
            {
              "kind": "field",
              "name": "buffered",
              "privacy": "public",
              "default": "playerContext.buffered.defaultValue"
            },
            {
              "kind": "field",
              "name": "device",
              "privacy": "public",
              "default": "playerContext.device.defaultValue"
            },
            {
              "kind": "field",
              "name": "isMobileDevice",
              "privacy": "public",
              "default": "playerContext.isMobileDevice.defaultValue"
            },
            {
              "kind": "field",
              "name": "isDesktopDevice",
              "privacy": "public",
              "default": "playerContext.isDesktopDevice.defaultValue"
            },
            {
              "kind": "field",
              "name": "isBuffering",
              "privacy": "public",
              "default": "playerContext.isBuffering.defaultValue"
            },
            {
              "kind": "field",
              "name": "isPlaying",
              "privacy": "public",
              "default": "playerContext.isPlaying.defaultValue"
            },
            {
              "kind": "field",
              "name": "hasPlaybackStarted",
              "privacy": "public",
              "default": "playerContext.hasPlaybackStarted.defaultValue"
            },
            {
              "kind": "field",
              "name": "hasPlaybackEnded",
              "privacy": "public",
              "default": "playerContext.hasPlaybackEnded.defaultValue"
            },
            {
              "kind": "field",
              "name": "isPlaybackReady",
              "privacy": "public",
              "default": "playerContext.isPlaybackReady.defaultValue"
            },
            {
              "kind": "field",
              "name": "viewType",
              "privacy": "public",
              "default": "playerContext.viewType.defaultValue"
            },
            {
              "kind": "field",
              "name": "isAudioView",
              "privacy": "public",
              "default": "playerContext.isAudioView.defaultValue"
            },
            {
              "kind": "field",
              "name": "isVideoView",
              "privacy": "public",
              "default": "playerContext.isVideoView.defaultValue"
            },
            {
              "kind": "field",
              "name": "mediaType",
              "privacy": "public",
              "default": "playerContext.mediaType.defaultValue"
            },
            {
              "kind": "field",
              "name": "isAudio",
              "privacy": "public",
              "default": "playerContext.isAudio.defaultValue"
            },
            {
              "kind": "field",
              "name": "isVideo",
              "privacy": "public",
              "default": "playerContext.isVideo.defaultValue"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FakeConsumer",
          "declaration": {
            "name": "FakeConsumer",
            "module": "./src/core/tests/FakeConsumer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/tests/helpers.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "emitEvent",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "parameters": [
            {
              "name": "el",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "event",
              "type": {
                "text": "Event"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "switchToMobileDevice",
          "return": {
            "type": {
              "text": "Promise<DeviceChangeEvent>"
            }
          },
          "parameters": [
            {
              "name": "player",
              "type": {
                "text": "Player"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "switchToDesktopDevice",
          "return": {
            "type": {
              "text": "Promise<DeviceChangeEvent>"
            }
          },
          "parameters": [
            {
              "name": "player",
              "type": {
                "text": "Player"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "buildPlayerWithMockProvider",
          "return": {
            "type": {
              "text": "Promise<[Player, MockMediaProvider]>"
            }
          },
          "parameters": [
            {
              "name": "slot",
              "type": {
                "text": "TemplateResult"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "connectProviderToPlayer",
          "return": {
            "type": {
              "text": "Promise<void>"
            }
          },
          "parameters": [
            {
              "name": "player",
              "type": {
                "text": "Player"
              }
            },
            {
              "name": "provider",
              "type": {
                "text": "MockMediaProvider"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "emitEvent",
          "declaration": {
            "name": "emitEvent",
            "module": "./src/core/tests/helpers.ts"
          }
        },
        {
          "kind": "js",
          "name": "switchToMobileDevice",
          "declaration": {
            "name": "switchToMobileDevice",
            "module": "./src/core/tests/helpers.ts"
          }
        },
        {
          "kind": "js",
          "name": "switchToDesktopDevice",
          "declaration": {
            "name": "switchToDesktopDevice",
            "module": "./src/core/tests/helpers.ts"
          }
        },
        {
          "kind": "js",
          "name": "buildPlayerWithMockProvider",
          "declaration": {
            "name": "buildPlayerWithMockProvider",
            "module": "./src/core/tests/helpers.ts"
          }
        },
        {
          "kind": "js",
          "name": "connectProviderToPlayer",
          "declaration": {
            "name": "connectProviderToPlayer",
            "module": "./src/core/tests/helpers.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/tests/vds-fake-consumer.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "FAKE_CONSUMER_TAG_NAME"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FAKE_CONSUMER_TAG_NAME",
          "declaration": {
            "name": "FAKE_CONSUMER_TAG_NAME",
            "module": "./src/core/tests/vds-fake-consumer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/user/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./user.events"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/user/user.events.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "USER_EVENT_PREFIX"
        },
        {
          "kind": "function",
          "name": "buildVdsUserEvent",
          "return": {
            "type": {
              "text": "UserEventConstructor<T>"
            }
          },
          "parameters": [
            {
              "name": "type",
              "type": {
                "text": "T"
              }
            }
          ]
        },
        {
          "kind": "class",
          "name": "UserPlayRequestEvent",
          "mixins": [
            {
              "name": "buildVdsUserEvent",
              "module": "./src/core/user/user.events.ts"
            }
          ],
          "superclass": {
            "name": "play",
            "module": "./src/core/user/user.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "UserPauseRequestEvent",
          "mixins": [
            {
              "name": "buildVdsUserEvent",
              "module": "./src/core/user/user.events.ts"
            }
          ],
          "superclass": {
            "name": "pause",
            "module": "./src/core/user/user.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "UserMutedChangeRequestEvent",
          "mixins": [
            {
              "name": "buildVdsUserEvent",
              "module": "./src/core/user/user.events.ts"
            }
          ],
          "superclass": {
            "name": "muted-change",
            "module": "./src/core/user/user.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "UserTimeChangeRequestEvent",
          "mixins": [
            {
              "name": "buildVdsUserEvent",
              "module": "./src/core/user/user.events.ts"
            }
          ],
          "superclass": {
            "name": "time-change",
            "module": "./src/core/user/user.events.ts"
          }
        },
        {
          "kind": "class",
          "name": "UserVolumeChangeRequestEvent",
          "mixins": [
            {
              "name": "buildVdsUserEvent",
              "module": "./src/core/user/user.events.ts"
            }
          ],
          "superclass": {
            "name": "volume-change",
            "module": "./src/core/user/user.events.ts"
          }
        },
        {
          "kind": "variable",
          "name": "ALL_USER_EVENT_TYPES",
          "type": {
            "text": "VdsUserEventType[]"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "USER_EVENT_PREFIX",
          "declaration": {
            "name": "USER_EVENT_PREFIX",
            "module": "./src/core/user/user.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "buildVdsUserEvent",
          "declaration": {
            "name": "buildVdsUserEvent",
            "module": "./src/core/user/user.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "UserPlayRequestEvent",
          "declaration": {
            "name": "UserPlayRequestEvent",
            "module": "./src/core/user/user.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "UserPauseRequestEvent",
          "declaration": {
            "name": "UserPauseRequestEvent",
            "module": "./src/core/user/user.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "UserMutedChangeRequestEvent",
          "declaration": {
            "name": "UserMutedChangeRequestEvent",
            "module": "./src/core/user/user.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "UserTimeChangeRequestEvent",
          "declaration": {
            "name": "UserTimeChangeRequestEvent",
            "module": "./src/core/user/user.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "UserVolumeChangeRequestEvent",
          "declaration": {
            "name": "UserVolumeChangeRequestEvent",
            "module": "./src/core/user/user.events.ts"
          }
        },
        {
          "kind": "js",
          "name": "ALL_USER_EVENT_TYPES",
          "declaration": {
            "name": "ALL_USER_EVENT_TYPES",
            "module": "./src/core/user/user.events.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/uuid/UuidMixin.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "UuidMixin",
          "description": "Mixes in a uuid attribute, property, and context that can uniquely identify a component.",
          "return": {
            "type": {
              "text": "UuidCocktail<T>"
            }
          },
          "parameters": [
            {
              "name": "Base",
              "description": "The constructor to mix into.",
              "type": {
                "text": "T"
              }
            }
          ]
        },
        {
          "kind": "class",
          "name": "UuidMixin",
          "superclass": {
            "name": "Base",
            "module": "./src/core/uuid/UuidMixin.ts"
          },
          "members": [
            {
              "kind": "field",
              "name": "_uuid",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "uuidCtx",
              "privacy": "protected",
              "default": "uuidContext.defaultValue"
            },
            {
              "kind": "field",
              "name": "uuid",
              "privacy": "public",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "method",
              "name": "setUuid",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "UuidMixin",
          "declaration": {
            "name": "UuidMixin",
            "module": "./src/core/uuid/UuidMixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/uuid/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./UuidMixin"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./uuid.context"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/core/uuid/uuid.context.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "uuidContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "uuidContext",
          "declaration": {
            "name": "uuidContext",
            "module": "./src/core/uuid/uuid.context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/providers/audio/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/providers/audio/vds-audio.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/providers/dailymotion/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/providers/dailymotion/vds-dailymotion.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/providers/dash/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/providers/dash/vds-dash.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/providers/embed/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/providers/embed/vds-embed.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/providers/file/MediaFileProvider.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "MediaFileProvider",
          "slots": [
            {
              "name": "",
              "description": "Pass `<source>` and `<track>` elements to the underlying HTML5 media player."
            }
          ],
          "events": [
            {
              "type": {
                "text": "ProviderTimeChangeEvent"
              }
            },
            {
              "name": "vds-aspect-ratio-change",
              "type": {
                "text": "AspectRatioChangeEvent"
              },
              "description": "Emitted when the aspect ratio changes.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-connect",
              "type": {
                "text": "ProviderConnectEvent"
              },
              "description": "Emitted when the provider attempts to connect to the player.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-disconnect",
              "type": {
                "text": "ProviderDisconnectEvent"
              },
              "description": "Emitted when the provider attempts to disconnect from the player.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-play",
              "type": {
                "text": "ProviderPlayEvent"
              },
              "description": "Emitted when playback attempts to start.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-pause",
              "type": {
                "text": "ProviderPauseEvent"
              },
              "description": "Emitted when playback pauses.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-playing",
              "type": {
                "text": "ProviderPlayingEvent"
              },
              "description": "Emitted when playback being playback.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-src-change",
              "type": {
                "text": "ProviderSrcChangeEvent"
              },
              "description": "Emitted when the current src changes.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-poster-change",
              "type": {
                "text": "ProviderPosterChangeEvent"
              },
              "description": "Emitted when the current poster changes.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-muted-change",
              "type": {
                "text": "ProviderMutedChangeEvent"
              },
              "description": "Emitted when the muted state of the current provider changes.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-volume-change",
              "type": {
                "text": "ProviderVolumeChangeEvent"
              },
              "description": "Emitted when the volume state of the current provider changes.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-time-change",
              "type": {
                "text": "ProviderTimeChangeEvent"
              },
              "description": "Emitted when the current playback time changes.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-duration-change",
              "type": {
                "text": "ProviderDurationChangeEvent"
              },
              "description": "Emitted when the length of the media changes.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-buffered-change",
              "type": {
                "text": "ProviderBufferedChangeEvent"
              },
              "description": "Emitted when the length of the media downloaded changes.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-buffering-change",
              "type": {
                "text": "ProviderBufferingChangeEvent"
              },
              "description": "Emitted when playback resumes/stops due to lack of data.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-view-type-change",
              "type": {
                "text": "ProviderViewTypeChangeEvent"
              },
              "description": "Emitted when the view type of the current provider/media changes.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-media-type-change",
              "type": {
                "text": "ProviderMediaTypeChangeEvent"
              },
              "description": "Emitted when the media type of the current provider/media changes.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-playback-ready",
              "type": {
                "text": "ProviderPlaybackReadyEvent"
              },
              "description": "Emitted when playback is ready to start - analgous with `canPlayThrough`.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-playback-start",
              "type": {
                "text": "ProviderPlaybackStartEvent"
              },
              "description": "Emitted when playback has started (`currentTime > 0`).",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-playback-end",
              "type": {
                "text": "ProviderPlaybackEndEvent"
              },
              "description": "Emitted when playback ends (`currentTime === duration`).",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            },
            {
              "name": "vds-provider-error",
              "type": {
                "text": "ProviderErrorEvent"
              },
              "description": "Emitted when a provider encounters an error during media loading/playback.",
              "inheritedFrom": {
                "name": "MediaProvider",
                "module": "./src/core/provider/MediaProvider.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaProvider",
            "module": "/src/providers/file/provider"
          },
          "members": [
            {
              "kind": "field",
              "name": "mediaEl",
              "privacy": "protected",
              "type": {
                "text": "HTMLMediaElement"
              }
            },
            {
              "kind": "field",
              "name": "disposal",
              "privacy": "protected",
              "default": "new Disposal()"
            },
            {
              "kind": "field",
              "name": "_isBuffering",
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_hasPlaybackStarted",
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_hasPlaybackEnded",
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_isPlaying",
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "method",
              "name": "firstUpdated",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "changedProps",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "field",
              "name": "_src",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "src",
              "privacy": "public",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "method",
              "name": "updateSrc",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "volume",
              "privacy": "public",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "paused",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "currentTime",
              "privacy": "public",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "muted",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "controls",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "crossOrigin",
              "privacy": "public",
              "type": {
                "text": "MediaCrossOriginOption"
              }
            },
            {
              "kind": "field",
              "name": "preload",
              "type": {
                "text": "MediaPreloadOption"
              },
              "privacy": "public",
              "default": "'metadata'"
            },
            {
              "kind": "field",
              "name": "timeRAF",
              "privacy": "protected",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "method",
              "name": "cancelTimeUpdates",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "requestTimeUpdates",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleSlotChange",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "listenToMediaEl",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleLoadedMetadata",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "originalEvent",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handlePlay",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "originalEvent",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handlePause",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "originalEvent",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handlePlaying",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "originalEvent",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleDurationChange",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "originalEvent",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleProgress",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "originalEvent",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleTimeUpdate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "originalEvent",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleVolumeChange",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "originalEvent",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleWaiting",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "originalEvent",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSuspend",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "originalEvent",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleEnded",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "originalEvent",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleError",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "originalEvent",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "isPlaybackReady",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "currentSrc",
              "privacy": "public",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "currentPoster",
              "privacy": "public",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "internalPlayer",
              "privacy": "public",
              "type": {
                "text": "HTMLMediaElement | undefined"
              }
            },
            {
              "kind": "field",
              "name": "duration",
              "privacy": "public",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "buffered",
              "privacy": "public",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "isPlaying",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "isBuffering",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "hasPlaybackStarted",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "hasPlaybackEnded",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "method",
              "name": "canPlayType",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "play",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "pause",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "throwIfNotReady",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MediaFileProvider",
          "declaration": {
            "name": "MediaFileProvider",
            "module": "./src/providers/file/MediaFileProvider.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/providers/file/file.types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/providers/file/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./file.types"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./MediaFileProvider"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/providers/hls/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/providers/hls/vds-hls.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/providers/video/VideoProvider.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "VideoProvider",
          "slots": [
            {
              "name": "",
              "description": "Pass `<source>` and `<track>` elements to the underlying HTML5 media player."
            }
          ],
          "events": [
            {
              "type": {
                "text": "ProviderViewTypeChangeEvent"
              }
            },
            {
              "name": "vds-aspect-ratio-change",
              "type": {
                "text": "AspectRatioChangeEvent"
              },
              "description": "Emitted when the aspect ratio changes.",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "name": "vds-provider-connect",
              "type": {
                "text": "ProviderConnectEvent"
              },
              "description": "Emitted when the provider attempts to connect to the player.",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "name": "vds-provider-disconnect",
              "type": {
                "text": "ProviderDisconnectEvent"
              },
              "description": "Emitted when the provider attempts to disconnect from the player.",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "name": "vds-provider-play",
              "type": {
                "text": "ProviderPlayEvent"
              },
              "description": "Emitted when playback attempts to start.",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "name": "vds-provider-pause",
              "type": {
                "text": "ProviderPauseEvent"
              },
              "description": "Emitted when playback pauses.",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "name": "vds-provider-playing",
              "type": {
                "text": "ProviderPlayingEvent"
              },
              "description": "Emitted when playback being playback.",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "name": "vds-provider-src-change",
              "type": {
                "text": "ProviderSrcChangeEvent"
              },
              "description": "Emitted when the current src changes.",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "name": "vds-provider-poster-change",
              "type": {
                "text": "ProviderPosterChangeEvent"
              },
              "description": "Emitted when the current poster changes.",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "name": "vds-provider-muted-change",
              "type": {
                "text": "ProviderMutedChangeEvent"
              },
              "description": "Emitted when the muted state of the current provider changes.",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "name": "vds-provider-volume-change",
              "type": {
                "text": "ProviderVolumeChangeEvent"
              },
              "description": "Emitted when the volume state of the current provider changes.",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "name": "vds-provider-time-change",
              "type": {
                "text": "ProviderTimeChangeEvent"
              },
              "description": "Emitted when the current playback time changes.",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "name": "vds-provider-duration-change",
              "type": {
                "text": "ProviderDurationChangeEvent"
              },
              "description": "Emitted when the length of the media changes.",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "name": "vds-provider-buffered-change",
              "type": {
                "text": "ProviderBufferedChangeEvent"
              },
              "description": "Emitted when the length of the media downloaded changes.",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "name": "vds-provider-buffering-change",
              "type": {
                "text": "ProviderBufferingChangeEvent"
              },
              "description": "Emitted when playback resumes/stops due to lack of data.",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "name": "vds-provider-view-type-change",
              "type": {
                "text": "ProviderViewTypeChangeEvent"
              },
              "description": "Emitted when the view type of the current provider/media changes.",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "name": "vds-provider-media-type-change",
              "type": {
                "text": "ProviderMediaTypeChangeEvent"
              },
              "description": "Emitted when the media type of the current provider/media changes.",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "name": "vds-provider-playback-ready",
              "type": {
                "text": "ProviderPlaybackReadyEvent"
              },
              "description": "Emitted when playback is ready to start - analgous with `canPlayThrough`.",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "name": "vds-provider-playback-start",
              "type": {
                "text": "ProviderPlaybackStartEvent"
              },
              "description": "Emitted when playback has started (`currentTime > 0`).",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "name": "vds-provider-playback-end",
              "type": {
                "text": "ProviderPlaybackEndEvent"
              },
              "description": "Emitted when playback ends (`currentTime === duration`).",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "name": "vds-provider-error",
              "type": {
                "text": "ProviderErrorEvent"
              },
              "description": "Emitted when a provider encounters an error during media loading/playback.",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaFileProvider",
            "module": "/src/providers/file"
          },
          "members": [
            {
              "kind": "method",
              "name": "firstUpdated",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "changedProps",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleLoadedMetadata",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "originalEvent",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "poster",
              "privacy": "public",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "currentPoster",
              "privacy": "public",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "controlsList",
              "privacy": "public",
              "type": {
                "text": "'nodownload' | 'nofullscreen' | 'noremoteplayback'"
              }
            },
            {
              "kind": "field",
              "name": "autoPiP",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "disablePiP",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "disableRemotePlayback",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "method",
              "name": "getMediaType",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "MediaType"
                }
              }
            },
            {
              "kind": "field",
              "name": "mediaEl",
              "privacy": "protected",
              "type": {
                "text": "HTMLMediaElement"
              },
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "field",
              "name": "disposal",
              "privacy": "protected",
              "default": "new Disposal()",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "field",
              "name": "_isBuffering",
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "field",
              "name": "_hasPlaybackStarted",
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "field",
              "name": "_hasPlaybackEnded",
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "field",
              "name": "_isPlaying",
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "field",
              "name": "_src",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "default": "''",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "field",
              "name": "src",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateSrc",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "field",
              "name": "volume",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "field",
              "name": "paused",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "field",
              "name": "currentTime",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "field",
              "name": "muted",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "field",
              "name": "controls",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "field",
              "name": "crossOrigin",
              "privacy": "public",
              "type": {
                "text": "MediaCrossOriginOption"
              },
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "field",
              "name": "preload",
              "type": {
                "text": "MediaPreloadOption"
              },
              "privacy": "public",
              "default": "'metadata'",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "field",
              "name": "timeRAF",
              "privacy": "protected",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "method",
              "name": "cancelTimeUpdates",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "method",
              "name": "requestTimeUpdates",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleSlotChange",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "method",
              "name": "listenToMediaEl",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "method",
              "name": "handlePlay",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "originalEvent",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "method",
              "name": "handlePause",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "originalEvent",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "method",
              "name": "handlePlaying",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "originalEvent",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleDurationChange",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "originalEvent",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleProgress",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "originalEvent",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleTimeUpdate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "originalEvent",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleVolumeChange",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "originalEvent",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleWaiting",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "originalEvent",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleSuspend",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "originalEvent",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleEnded",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "originalEvent",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleError",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "originalEvent",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "field",
              "name": "isPlaybackReady",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "field",
              "name": "currentSrc",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "field",
              "name": "internalPlayer",
              "privacy": "public",
              "type": {
                "text": "HTMLMediaElement | undefined"
              },
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "field",
              "name": "duration",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "field",
              "name": "buffered",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "field",
              "name": "isPlaying",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "field",
              "name": "isBuffering",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "field",
              "name": "hasPlaybackStarted",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "field",
              "name": "hasPlaybackEnded",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "method",
              "name": "canPlayType",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "method",
              "name": "play",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "method",
              "name": "pause",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            },
            {
              "kind": "method",
              "name": "throwIfNotReady",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "MediaFileProvider",
                "module": "./src/providers/file/MediaFileProvider.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VideoProvider",
          "declaration": {
            "name": "VideoProvider",
            "module": "./src/providers/video/VideoProvider.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/providers/video/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./vds-video"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./VideoProvider"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/providers/video/vds-video.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "VIDEO_TAG_NAME"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VIDEO_TAG_NAME",
          "declaration": {
            "name": "VIDEO_TAG_NAME",
            "module": "./src/providers/video/vds-video.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/providers/video/video.css.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "videoStyles"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "videoStyles",
          "declaration": {
            "name": "videoStyles",
            "module": "./src/providers/video/video.css.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/providers/video/video.stories.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/providers/video/video.utils.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "AUDIO_EXTENSIONS"
        },
        {
          "kind": "variable",
          "name": "VIDEO_EXTENSIONS"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AUDIO_EXTENSIONS",
          "declaration": {
            "name": "AUDIO_EXTENSIONS",
            "module": "./src/providers/video/video.utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "VIDEO_EXTENSIONS",
          "declaration": {
            "name": "VIDEO_EXTENSIONS",
            "module": "./src/providers/video/video.utils.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/providers/vimeo/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/providers/vimeo/vds-vimeo.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/providers/youtube/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/providers/youtube/vds-youtube.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/skins/default/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/skins/default/vds-default-skin.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/skins/plyr/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/skins/plyr/vds-plyr-skin.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/captions/captions.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/captions/vds-captions.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/icon/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/icon/vds-icon.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/icon-library/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/icon-library/vds-icon-library.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/live-indicator/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/live-indicator/vds-live-indicator.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/poster/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/poster/vds-poster.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/press-fullscreen/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/press-fullscreen/vds-press-fullscreen.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/press-play/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/press-play/vds-press-play.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/scrim/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/scrim/vds-scrim.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/skeleton/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/skeleton/vds-skeleton.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/slider/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/slider/vds-slider.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/spinner/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/spinner/vds-spinner.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/tooltip/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/tooltip/vds-tooltip.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/ui/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/ui/vds-ui.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/controls/caption-control/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/controls/caption-control/vds-caption-control.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/controls/control/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/controls/control/vds-control.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/controls/control-group/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/controls/control-group/vds-control-group.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/controls/mute-control/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/controls/mute-control/vds-mute-control.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/controls/fullscreen-control/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/controls/fullscreen-control/vds-fullscreen-control.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/controls/controls/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/controls/controls/vds-controls.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/controls/control-spacer/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/controls/control-spacer/vds-control-spacer.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/controls/pip-control/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/controls/pip-control/vds-pip-control.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/controls/playback-control/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/controls/playback-control/vds-playback-control.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/controls/scrubber-control/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/controls/scrubber-control/vds-scrubber-control.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/controls/volume-control/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/controls/volume-control/vds-volume-control.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/controls/settings-control/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/controls/settings-control/vds-settings-control.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/menu/menu-radio-group/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/menu/menu-radio-group/vds-menu-radio-group.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/menu/menu-radio/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/menu/menu-radio/vds-menu-radio.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/settings/default-settings/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/settings/default-settings/vds-default-settings.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/menu/submenu/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/menu/submenu/vds-submenu.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/settings/settings/settings.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/settings/settings/vds-settings.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/menu/menu-item/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/menu/menu-item/vds-menu-item.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/time/current-time/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/time/current-time/vds-current-time.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/menu/menu/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/menu/menu/vds-menu.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/time/end-time/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/time/end-time/vds-end-time.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/time/time-progress/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/time/time-progress/vds-time-progress.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/time/time/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./src/ui/time/time/vds-time.ts",
      "declarations": [],
      "exports": []
    }
  ]
}
